name: "Build And Publish Image"
description: "Build and publish Image to an ECR Repository"

inputs:
  repository_name:
    description: 'The name of the ECR repository to upload image to'
    required: true
  image_name:
    description: 'The name of the image being uploaded to the ECR repository'
    required: true
  registry_name:
    description: 'The name of the ECR registry for the environment'
    required: true
  docker_file:
    description: 'The path to the dockerfile'
    required: true
  image_property_name:
    required: true
    description: 'The name of the corresponding image property in the infrastructure'
  github_token:
    required: true
    description: 'The admin github token'
  image_architecture:
    required: false
    default: 'linux/amd64'
    description: 'The architectures for which to build the images'
  build_args:
    required: false
    description: "Additional arguments for the docker build"

runs:
  using: "composite"
  steps:
    - name: Identity - Build, tag, and push image to Amazon ECR
      id: build-image
      shell: bash
      env:
        ECR_REGISTRY: ${{ inputs.registry_name }}
        DOCKER_FILE: ${{ inputs.docker_file }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        IMAGE_NAME=$ECR_REGISTRY/${{inputs.repository_name}}:${{inputs.image_name}}
        ARGS_OPT=$([[ "${{inputs.build_args}}" == "" ]] && echo "" || echo "--build-arg=${{inputs.build_args}}")
        docker build -f $DOCKER_FILE -t $IMAGE_NAME --platform=${{inputs.image_architecture}} $ARGS_OPT .
        docker push $IMAGE_NAME
        echo "::set-output name=image::$IMAGE_NAME"

    - name: Get other actions
      uses: actions/checkout@v2
      with:
        repository: wildsparq/.github
        token: ${{ inputs.github_token }}
        path: .github

    - uses: ./.github/workflows/composite/set-infrastructure-image-property
      if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/hotfix')
      with:
        image_property_name: ${{inputs.image_property_name}}
        github_token: ${{inputs.github_token}}
        image_name: ${{inputs.image_name}}
